import { Directive, Input } from '@angular/core';
import { take } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../socialauth.service";
export class GoogleSigninButtonDirective {
    constructor(el, socialAuthService) {
        this.type = 'icon';
        this.size = 'medium';
        this.text = 'signin_with';
        this.shape = 'rectangular';
        this.theme = 'outline';
        this.logo_alignment = 'left';
        this.width = 0;
        this.locale = '';
        socialAuthService.initState.pipe(take(1)).subscribe(() => {
            Promise.resolve(this.width).then((value) => {
                if (value > 400 || (value < 200 && value != 0)) {
                    Promise.reject('Please note .. max-width 400 , min-width 200 ' +
                        '(https://developers.google.com/identity/gsi/web/tools/configurator)');
                }
                else {
                    google.accounts.id.renderButton(el.nativeElement, {
                        type: this.type,
                        size: this.size,
                        text: this.text,
                        width: this.width,
                        shape: this.shape,
                        theme: this.theme,
                        logo_alignment: this.logo_alignment,
                        locale: this.locale,
                    });
                }
            });
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: GoogleSigninButtonDirective, deps: [{ token: i0.ElementRef }, { token: i1.SocialAuthService }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.0.1", type: GoogleSigninButtonDirective, selector: "asl-google-signin-button", inputs: { type: "type", size: "size", text: "text", shape: "shape", theme: "theme", logo_alignment: "logo_alignment", width: "width", locale: "locale" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: GoogleSigninButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line @angular-eslint/directive-selector
                    selector: 'asl-google-signin-button',
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.SocialAuthService }], propDecorators: { type: [{
                type: Input
            }], size: [{
                type: Input
            }], text: [{
                type: Input
            }], shape: [{
                type: Input
            }], theme: [{
                type: Input
            }], logo_alignment: [{
                type: Input
            }], width: [{
                type: Input
            }], locale: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29vZ2xlLXNpZ25pbi1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9kaXJlY3RpdmVzL2dvb2dsZS1zaWduaW4tYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7OztBQU90QyxNQUFNLE9BQU8sMkJBQTJCO0lBeUJ0QyxZQUFZLEVBQWMsRUFBRSxpQkFBb0M7UUF2QmhFLFNBQUksR0FBd0IsTUFBTSxDQUFDO1FBR25DLFNBQUksR0FBaUMsUUFBUSxDQUFDO1FBRzlDLFNBQUksR0FBb0QsYUFBYSxDQUFDO1FBR3RFLFVBQUssR0FBaUQsYUFBYSxDQUFDO1FBR3BFLFVBQUssR0FBK0MsU0FBUyxDQUFDO1FBRzlELG1CQUFjLEdBQXNCLE1BQU0sQ0FBQztRQUczQyxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBR2xCLFdBQU0sR0FBVyxFQUFFLENBQUM7UUFHbEIsaUJBQWlCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ3ZELE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUN6QyxJQUFJLEtBQUssR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDO29CQUMvQyxPQUFPLENBQUMsTUFBTSxDQUNaLCtDQUErQzt3QkFDN0MscUVBQXFFLENBQ3hFLENBQUM7Z0JBQ0osQ0FBQztxQkFBTSxDQUFDO29CQUNOLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFO3dCQUNoRCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7d0JBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO3dCQUNmLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTt3QkFDZixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7d0JBQ2pCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSzt3QkFDakIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO3dCQUNqQixjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWM7d0JBQ25DLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtxQkFDcEIsQ0FBQyxDQUFDO2dCQUNMLENBQUM7WUFDSCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs4R0EvQ1UsMkJBQTJCO2tHQUEzQiwyQkFBMkI7OzJGQUEzQiwyQkFBMkI7a0JBSnZDLFNBQVM7bUJBQUM7b0JBQ1QsOERBQThEO29CQUM5RCxRQUFRLEVBQUUsMEJBQTBCO2lCQUNyQzsrR0FHQyxJQUFJO3NCQURILEtBQUs7Z0JBSU4sSUFBSTtzQkFESCxLQUFLO2dCQUlOLElBQUk7c0JBREgsS0FBSztnQkFJTixLQUFLO3NCQURKLEtBQUs7Z0JBSU4sS0FBSztzQkFESixLQUFLO2dCQUlOLGNBQWM7c0JBRGIsS0FBSztnQkFJTixLQUFLO3NCQURKLEtBQUs7Z0JBSU4sTUFBTTtzQkFETCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyB0YWtlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBTb2NpYWxBdXRoU2VydmljZSB9IGZyb20gJy4uL3NvY2lhbGF1dGguc2VydmljZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2RpcmVjdGl2ZS1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnYXNsLWdvb2dsZS1zaWduaW4tYnV0dG9uJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEdvb2dsZVNpZ25pbkJ1dHRvbkRpcmVjdGl2ZSB7XHJcbiAgQElucHV0KClcclxuICB0eXBlOiAnaWNvbicgfCAnc3RhbmRhcmQnID0gJ2ljb24nO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHNpemU6ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdsYXJnZScgPSAnbWVkaXVtJztcclxuXHJcbiAgQElucHV0KClcclxuICB0ZXh0OiAnc2lnbmluX3dpdGgnIHwgJ3NpZ251cF93aXRoJyB8ICdjb250aW51ZV93aXRoJyA9ICdzaWduaW5fd2l0aCc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc2hhcGU6ICdzcXVhcmUnIHwgJ2NpcmNsZScgfCAncGlsbCcgfCAncmVjdGFuZ3VsYXInID0gJ3JlY3Rhbmd1bGFyJztcclxuXHJcbiAgQElucHV0KClcclxuICB0aGVtZTogJ291dGxpbmUnIHwgJ2ZpbGxlZF9ibHVlJyB8ICdmaWxsZWRfYmxhY2snID0gJ291dGxpbmUnO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGxvZ29fYWxpZ25tZW50OiAnbGVmdCcgfCAnY2VudGVyJyA9ICdsZWZ0JztcclxuXHJcbiAgQElucHV0KClcclxuICB3aWR0aDogbnVtYmVyID0gMDtcclxuXHJcbiAgQElucHV0KClcclxuICBsb2NhbGU6IHN0cmluZyA9ICcnO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgc29jaWFsQXV0aFNlcnZpY2U6IFNvY2lhbEF1dGhTZXJ2aWNlKSB7XHJcbiAgICBzb2NpYWxBdXRoU2VydmljZS5pbml0U3RhdGUucGlwZSh0YWtlKDEpKS5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICBQcm9taXNlLnJlc29sdmUodGhpcy53aWR0aCkudGhlbigodmFsdWUpID0+IHtcclxuICAgICAgICBpZiAodmFsdWUgPiA0MDAgfHwgKHZhbHVlIDwgMjAwICYmIHZhbHVlICE9IDApKSB7XHJcbiAgICAgICAgICBQcm9taXNlLnJlamVjdChcclxuICAgICAgICAgICAgJ1BsZWFzZSBub3RlIC4uIG1heC13aWR0aCA0MDAgLCBtaW4td2lkdGggMjAwICcgK1xyXG4gICAgICAgICAgICAgICcoaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vaWRlbnRpdHkvZ3NpL3dlYi90b29scy9jb25maWd1cmF0b3IpJ1xyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZ29vZ2xlLmFjY291bnRzLmlkLnJlbmRlckJ1dHRvbihlbC5uYXRpdmVFbGVtZW50LCB7XHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgICAgICAgICAgc2l6ZTogdGhpcy5zaXplLFxyXG4gICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHQsXHJcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLndpZHRoLFxyXG4gICAgICAgICAgICBzaGFwZTogdGhpcy5zaGFwZSxcclxuICAgICAgICAgICAgdGhlbWU6IHRoaXMudGhlbWUsXHJcbiAgICAgICAgICAgIGxvZ29fYWxpZ25tZW50OiB0aGlzLmxvZ29fYWxpZ25tZW50LFxyXG4gICAgICAgICAgICBsb2NhbGU6IHRoaXMubG9jYWxlLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=